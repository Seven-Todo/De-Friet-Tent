@model De_Friet_Tent.Models.OrderProductViewModel

@{
    ViewData["Title"] = "CreateCustomer";
    var products = ViewData["Products"] as List<De_Friet_Tent.Models.Product>;
    Layout = "_LayoutForCustomers";
}

<h1>Create</h1>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Order.CustomerId" class="control-label"></label>
                <select asp-for="Order.CustomerId" class="form-control" asp-items="ViewBag.CustomerId"></select>
            </div>
                        <div class="form-group">
                <label asp-for="Order.StatusId" class="control-label"></label>
                <select asp-for="Order.StatusId" class="form-control" asp-items="ViewBag.StatusId"></select>
            </div>
            
            <div class="form-group">
                <label asp-for="Order.Totalprice" class="control-label"></label>
                <input asp-for="Order.Totalprice" class="form-control" type="number" step="0.01" />
                <span asp-validation-for="Order.Totalprice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order.Products" class="control-label"></label>
                @Html.ListBoxFor(m => m.SelectedProducts,
                         new MultiSelectList(Model.Products, "Id", "Name", Model.SelectedProducts),
                         new { @class = "form-control" }
                         )
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
